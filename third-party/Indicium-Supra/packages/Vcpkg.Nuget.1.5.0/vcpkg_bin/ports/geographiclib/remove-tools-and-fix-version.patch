diff --git a/CMakeLists.txt b/CMakeLists.txt
index e79923b..3448362 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -437,13 +437,13 @@ set_property (GLOBAL PROPERTY USE_FOLDERS ON)
 # The list of subdirectories to process
 add_subdirectory (src)
 add_subdirectory (include/GeographicLib)
-add_subdirectory (tools)
-add_subdirectory (man)
-add_subdirectory (doc)
-add_subdirectory (js)
-add_subdirectory (matlab)
-add_subdirectory (python/geographiclib)
-add_subdirectory (examples)
+# add_subdirectory (tools)
+# add_subdirectory (man)
+# add_subdirectory (doc)
+# add_subdirectory (js)
+# add_subdirectory (matlab)
+# add_subdirectory (python/geographiclib)
+# add_subdirectory (examples)
 if (MSVC AND BUILD_NETGEOGRAPHICLIB)
   if (GEOGRAPHICLIB_PRECISION EQUAL 2)
     set (NETGEOGRAPHICLIB_LIBRARIES NETGeographicLib)
diff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt
index 0c8ad64..7dc4096 100644
--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -14,10 +14,10 @@ configure_file (project-config.cmake.in
 configure_file (project-config-version.cmake.in
   "${PROJECT_BINARY_DIR}/${PROJECT_NAME_LOWER}-config-version.cmake" @ONLY)
 export (TARGETS
-  ${PROJECT_SHARED_LIBRARIES} ${PROJECT_STATIC_LIBRARIES} ${TOOLS}
+  ${PROJECT_SHARED_LIBRARIES} ${PROJECT_STATIC_LIBRARIES}
   FILE "${PROJECT_BINARY_DIR}/${PROJECT_NAME_LOWER}-targets.cmake")
 export (TARGETS
-  ${PROJECT_SHARED_LIBRARIES} ${PROJECT_STATIC_LIBRARIES} ${TOOLS}
+  ${PROJECT_SHARED_LIBRARIES} ${PROJECT_STATIC_LIBRARIES}
   NAMESPACE ${PROJECT_NAME}::
   FILE "${PROJECT_BINARY_DIR}/${PROJECT_NAME_LOWER}-namespace-targets.cmake")
 
diff --git a/cmake/project-config-version.cmake.in b/cmake/project-config-version.cmake.in
index 3b3b9e8..bc2ce19 100644
--- a/cmake/project-config-version.cmake.in
+++ b/cmake/project-config-version.cmake.in
@@ -18,10 +18,10 @@ elseif (NOT (APPLE OR (NOT DEFINED CMAKE_SIZEOF_VOID_P) OR
   # since a multi-architecture library is built for that platform).
   set (REASON "sizeof(*void) =  @CMAKE_SIZEOF_VOID_P@")
   set (PACKAGE_VERSION_UNSUITABLE TRUE)
-elseif (MSVC AND NOT MSVC_VERSION STREQUAL "@MSVC_VERSION@")
+#elseif (MSVC AND NOT MSVC_VERSION STREQUAL "@MSVC_VERSION@")
   # Reject if there's a mismatch in MSVC compiler versions
-  set (REASON "_MSC_VER = @MSVC_VERSION@")
-  set (PACKAGE_VERSION_UNSUITABLE TRUE)
+#  set (REASON "_MSC_VER = @MSVC_VERSION@")
+#  set (PACKAGE_VERSION_UNSUITABLE TRUE)
 elseif (NOT CMAKE_CROSSCOMPILING STREQUAL "@CMAKE_CROSSCOMPILING@")
   # Reject if there's a mismatch in ${CMAKE_CROSSCOMPILING}
   set (REASON "cross-compiling = @CMAKE_CROSSCOMPILING@")
